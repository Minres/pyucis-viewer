  
jobs:
- job: PyUCISViewer_Linux
  pool:
   vmImage: 'ubuntu-18.04'

  variables:
  - name: build_num
    value: $(Build.BuildNumber)
  steps:
  - script: |
      python3 --version
      python3 -m pip install --upgrade pip 
      python3 -m pip install wheel twine 
      python3 -m pip install -r requirements_dev.txt 
    displayName: 'Install Python packages'
    
#  - script: |
#     export PYTHONPATH=$(Build.Repository.LocalPath)/src
#     python3 -m pytest ve/unit --cov=./src --cov-report=xml --cov-report=html --doctest-modules --junitxml=junit/test-results.xml
#    displayName: 'Run Unit Tests'
   
#  - task: PublishTestResults@2
#    condition: succeededOrFailed()
#    inputs:
#      testResultsFiles: '**/test-*.xml'
#      testRunTitle: 'Publish test results'

#  - script: |
#      python scripts/run_pylint.py
#    displayName: 'Run PyLint'

#  - task: PublishCodeCoverageResults@1
#    inputs:
#        codeCoverageTool: Cobertura
#        summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
#        reportDirectory: '$(System.DefaultWorkingDirectory)/**/htmlcov'

#  - script: |
#      mkdir coverdata
#      i=1
#      for file in `find -name 'coverage.xml'`; do
#        cp $file coverdata/coverage_${i}.xml
#        i=`expr $i + 1`
#      done
#    displayName: 'Collect coverage data'

#  - task: PublishPipelineArtifact@1
#    inputs:
#      targetPath: $(Build.Repository.LocalPath)/coverdata
#      artifactName: coverdata
#    displayName: 'Publish coverage data'

  - script: |
      python3 setup.py bdist_wheel --universal
    displayName: 'Build Wheel'

  - task: TwineAuthenticate@1
    condition: eq(variables['Build.SourceBranchName'], 'master')
    inputs:
      pythonUploadServiceConnection: pypi-pyucis-viewer
  - script: |
     # Only deploy from master
     if test "$(Build.SourceBranchName)" = "master"; then
         python3 -m twine --version
         echo "Calling twine"
         python3 -m twine upload -r pyucis-viewer --config-file $(PYPIRC_PATH) dist/*.whl
         echo "Calling twine complete"
     fi
    displayName: 'Upload to PyPi'


